%package    qls.parser
%class      QLSParser
%interface  QLSTokens
%start      stylesheet

%token <QLSString>      STRING
%token <QLSHex>         HEX
%token <QLSInt>         INT
%token <QLSIdent>       IDENT

%token ':' '"'
%token STYLESHEET PAGE SECTION DEFAULT
%token TYPEBOOL TYPEFLOAT TYPEINT TYPESTRING
%token QUESTION WIDGET
%token SLIDER SPINBOX TEXT CHECKBOX RADIO
%token WIDTH HEIGHT FONT FONTSIZE COLOR
%token '(' ')'
%token '{' '}'



%{
import qls.ast.*;
import qls.ast.literals.*;
import qls.ast.attributes.*;
import qls.ast.types.*;
import qls.ast.widgets.*;
%}

%%

stylesheet  : STYLESHEET IDENT stylesheetStatements                        { result = new Stylesheet($2, $3); }
            ;

stylesheetStatements
            : stylesheetStatement stylesheetStatements      { $$ = new StylesheetStatements($1, $2, lexer.getRowNumber());      }
            | stylesheetStatement                           { $$ = new StylesheetStatements($1, lexer.getRowNumber());      }
            ;

stylesheetStatement
            : PAGE IDENT '{' pageStatements '}'             { $$ = new Page($2, $4, lexer.getRowNumber()); }
            | default                                       { $$ = $1; }
            ;

pageStatements
            : pageStatement pageStatements                  { $$ = new PageStatements($1, $2, lexer.getRowNumber()); }
            | pageStatement                                 { $$ = new PageStatements($1, lexer.getRowNumber()); }
            ;

pageStatement
            : SECTION STRING '{' sectionStatements '}'      { $$ = new Section($2, $4, lexer.getRowNumber); }
            ;

sectionStatements
            : sectionStatement sectionStatements            { $$ = new SectionStatements($1, $2, lexer.getRowNumber());  }
            | sectionStatements                             { $$ = new SectionStatements($1, lexer.getRowNumber());  }
            ;

sectionStatement
            : pageStatement                                 { $$ = $1; }
            | question                                      { $$ = $1; }
            | default                                       { $$ = $1; }
            ;

default
            : DEFAULT type '{' attributes '}'                { $$ = new DefaultWithAttributes($2, $4, lexer.getRowNumber()); }
            | DEFAULT type widget                            { $$ = new Default($2, $3, lexer.getRowNumber()); }
            ;

attributes  : attribute attributes                          { $$ = new DefaultAttributes($1, $2, lexer.getRowNumber()); }
            | attribute                                     { $$ = new DefaultAttributes($1, lexer.getRowNumber()); }
            ;

attribute   : WIDTH ':' INT                                 { $$ = new Width($3, lexer.getRowNumber()); }
            | HEIGHT ':' INT                                { $$ = new Height($3, lexer.getRowNumber()); }
            | FONT ':'  STRING                              { $$ = new Font($3, lexer.getRowNumber()); }
            | FONTSIZE ':' INT                              { $$ = new FontSize($3, lexer.getRowNumber()); }
            | COLOR ':' HEX                                 { $$ = new Color($3, lexer.getRowNumber()); }
            | widget                                        { $$ = $1; }
            ;

type
            : TYPEBOOL                                          { $$ = new BooleanType();   }
            | TYPEINT                                           { $$ = new IntType();   }
            | TYPESTRING                                        { $$ = new StringType();   }
            | TYPEFLOAT                                         { $$ = new FloatType();   }
            ;

question
            : QUESTION IDENT widget                             { $$ = new Question($2, $3, lexer.getRowNumber());  }
            | QUESTION IDENT                                    { $$ = new Question($2, lexer.getRowNumber()); }
            ;


widget      : WIDGET SPINBOX                                    { $$ = new Spinbox();  }
            | WIDGET SLIDER                                     { $$ = new Slider();  }
            | WIDGET RADIO '(' STRING ',' STRING ')'            { $$ = new Radio();  }
            | WIDGET CHECKBOX                                   { $$ = new Checkbox();  }
            | WIDGET TEXT                                       { $$ = new Text();  }
            ;

%%
private QLSLexer lexer;
private Stylesheet result;

public Stylesheet getResult () {
  return result;
}

public QLSParser (QLSLexer lexer) {
  this.lexer = lexer;
}

private void yyerror (String msg) {
  System.err.println(lexer.getRowNumber() + msg);
}