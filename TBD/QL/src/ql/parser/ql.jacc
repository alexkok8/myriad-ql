%package ql.parser
%class Parser
%interface Tokens
%start form

%token ':' '"' TYPEBOOL TYPEINT TYPESTRING TRUE FALSE
%token <QLString> STRING
%token <QLInt> INT
%token '*' '/' '+' '-' OR AND NEQ EQ '<' LEQ '>' GEQ '!'
%token '(' ')'
%token IF ELSE '{' '}'

%left OR
%left AND
%left '>' '<' GEQ LEQ NEQ EQ
%left '+' '-'
%left '*' '/'
%left UMIN UPLUS UNOT

%type <Form> form
%type <Statements> statements
%type <Statement> statement
%type <Question> question
%type <Type> type
%type <If> if




%{
import ql.ast.*;
import ql.ast.type.*;
import ql.ast.expression.*;
%}

%%

 form : statements { result = new Form($1); }
      ;

 statements : statement statements      {$$ = new Statements($1, $2);}
            | statement                 {$$ = new Statements($1);}
            ;


 statement : question                   {$$ = $1;}
           ;

 question : '"' STRING '"' STRING ':' type      {$$ = new Question($2, $4, $6);}
          ;

 type : TYPEBOOL        {$$ = TYPEBOOL;}
       | TYPEINT        {$$ = TYPEINT;}
       | TYPESTRING     {$$ = TYPESTRING;}
       ;

 if :  IF '(' expr ')' '{' statements '}' {$$ = new If($3, $6);}
     | IF '(' expr ')' '{' statements '}' ELSE '{' statements '}' {$$ = new If($3, $6, $10);}
     ;


%%
private Lexer lexer;

private Form result;

public Form getResult() {
  return result;
}

public Parser(Lexer lexer) {
  this.lexer = lexer;
}

private void yyerror(String msg) {
  System.err.println(msg);
}