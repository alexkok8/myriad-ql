//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from F:\SoftwareConstruction\myriad-ql\WeekendWarriors\DSL\DSL\\Grammar\Grammar.g4 by ANTLR 4.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="GrammarParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6")]
[System.CLSCompliant(false)]
public interface IGrammarListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.form"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForm([NotNull] GrammarParser.FormContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.form"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForm([NotNull] GrammarParser.FormContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] GrammarParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] GrammarParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.question"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQuestion([NotNull] GrammarParser.QuestionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.question"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQuestion([NotNull] GrammarParser.QuestionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.conditionalBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditionalBlock([NotNull] GrammarParser.ConditionalBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.conditionalBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditionalBlock([NotNull] GrammarParser.ConditionalBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] GrammarParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] GrammarParser.ExpressionContext context);
}
